@import "ui-variables";
@import "./extras/pv-variables";

project-viewer {
  -webkit-user-select: none;
	font-size: @font-size;
	font-family: @font-family;
	display: flex;
	flex-direction: column;
	transition: width 0.5s;
	width: @project-viewer_main_width-max;

	.heading {
		color: @project-viewer_item_color;
		padding-left: @component-padding;
    white-space: nowrap;

		&.hidden {
			visibility: hidden;
		}
	}

	&.autohide {
		width: @project-viewer_main_width-min;

    .hidden-block {
      opacity: 0;
    }

		&:hover {
			width: @project-viewer_main_width-max;

			.hidden-block {
				opacity: 1;
			}
		}
	}

	.hidden-block {
		background-color: @tool-panel-background-color;
		pointer-events: none;
		position: absolute;
		height: 100%;
		width: 100%;
		z-index: 1;
		transition: opacity 0.5s;
	}

	.body-content {
		overflow: scroll;
		flex-grow: 1;
	}

	> .list-tree {
		position: relative;
		padding: @component-padding @component-padding/2;
	}

	.has-collapsable-children {
		margin-left: 10px;
	}

	li[is="project-viewer-list-nested-item"].list-nested-item,
	li[is="project-viewer-list-item"].list-item {
		transition: opacity @pv_transition-duration-default;

		&.dragged {
			opacity: 0.5;

			> .list-item {
				color: @project-viewer_item_color_dragged !important;
			}

			.list-tree {
				display: none;
			}
		}

		&:not(.selected)::before {
			position: absolute;
			left: 0;
			height: @component-line-height;
			content: "";
			width: 2px;
			background-color: @project-viewer_item_background-color;
			visibility: hidden;
			transform: scaleY(0);
			color: @project-viewer_item_color;
			transition: transform @pv_transition-duration-default, visibility @pv_transition-duration-default;
			padding-left: 0;
		}

		&.active {
			color: @project-viewer_item_color;

			> .list-item {
				color: @project-viewer_item_color;
			}

			&:not(.selected):not(.no-paths)::before {
				visibility: visible !important;
				transform: scaleY(1) !important;
			}
		}
	}

	li[is="project-viewer-list-nested-item"].list-nested-item {
		-webkit-user-drag: element;
		pointer-events: none;
		transition: color @pv_transition-duration-default ease-in 0s;

		> .list-item {
			pointer-events: all;
			cursor: pointer;

			&:hover {
				color: @project-viewer_item_color;
			}
		}

		.list-tree {
			pointer-events: none;
		}

		li[is="project-viewer-list-item"].list-item {
			-webkit-user-drag: element;
			-webkit-user-select: none;
			cursor: pointer;
			transition: color @pv_transition-duration-default ease-in 0s, background-color @pv_transition-duration-default ease-in 0s, padding @pv_transition-duration-fast ease-in 0s;
			pointer-events: all;

			&.no-paths,
			&.no-paths span {
				text-decoration: line-through;
				color: @text-color-subtle;
				cursor: not-allowed;
			}

			&:not(.selected):not(.no-paths)::before {
				position: absolute;
				left: 0;
				height: @component-line-height;
				content: "";
				width: 2px;
				background-color: @project-viewer_item_background-color;
				visibility: hidden;
				transform: scaleY(0);
				transition: transform @pv_transition-duration-default, visibility @pv_transition-duration-default;
			}

			&:not(.selected):not(.no-paths):hover {
				color: @project-viewer_item_color;
				padding-left: 0;
			}

			&:not(.selected):hover::before {
				visibility: visible;
				transform: scaleY(1);
			}

			span {
				pointer-events: none;
			}
		}
	}
}

.pv-has-custom-icons {

	@import (less) "./../node_modules/octicons/build/font/octicons.css";
	@import "./extras/octicons";

	@import (less) "./../node_modules/devicon/devicon.css";
	@import "./extras/devicon";

	.octicon::before {
		margin-right: @component-padding / 2;
	}

	.octicon::before,
	.icon::before {
		// this fixes the devicon being smaller then the octicons
		font-size: @component-icon-size;
		// centers all icons that are width smaller then the average
		text-align: center;
		vertical-align: middle;
	}
}

project-viewer-form {
	background-color: @tab-background-color;
	overflow: scroll;
	padding: @component-padding * 2;

	.panel-body {
		width: 80%;
	  margin: 0 auto;
	}

	h1 {
		color: @text-color-highlight;
	}

	div[class*="form-block"] {
		border-bottom: 1px solid @pane-item-border-color;
		padding-bottom: @component-padding;
	}

	.form-block-title .input-label {
		display: inline;
		width: -webkit-max-content;
		margin: 0 1em 1em 0;
	}

	.input-label {
		display: block;
		width: -webkit-max-content;

		.text-info {
			margin-left: @component-padding/2;
		}
	}

	.list-group {
		.pv-path-remove::before {
			color: @text-color-error;
		}
		.pv-path-redo::before {
			color: @text-color-warning;
		}

		.pv-path-name {
			&.remove-existing {
				text-decoration: line-through;
				color: @text-color-subtle;
			}
		}
	}

	.icons-list {
		margin-top: @component-padding;
		height: 200px;
		overflow: scroll;
		padding: @component-padding;
		background-color: @tool-panel-background-color;
		position: relative;
		flex: 1 1 300px;
		min-width: 0;
		// border: 1px solid @tool-panel-border-color;
		display: flex;
		flex-wrap: wrap;
		align-content: flex-start;

		.icon {
			flex: 1 0 200px;
			padding: @component-padding/2 @component-padding;
			transition: all @pv_transition-duration-default;

			&:hover {
				cursor: pointer;
				color: @text-color-highlight;
				background-color: @button-background-color-hover;
			}
		}
	}

	.input-label {
		cursor: pointer;
	}

	input[type="checkbox"] {
		cursor: pointer;
	}

	.list-group {
		margin-top: @component-padding;
	}

	.form-block-groups {
		position: relative;

		.list-nested-item {
			-webkit-user-select: none;
			pointer-events: none;
			transition: color @pv_transition-duration-default ease-in 0s;

			> .list-item {
				pointer-events: all;
				cursor: pointer;

				&:hover {
					color: @project-viewer_item_color;
				}
			}

			.list-tree {
				pointer-events: none;
			}
		}
	}
}
